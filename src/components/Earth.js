/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: PatelDev (https://sketchfab.com/PatelDev)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/earth-f7a76c63ff1846afb2d606e5c8369c15
title: Earth
*/

import React, { useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useSpring, a } from '@react-spring/three';
import Plane from './Plane'

const LON_OFFSET = -Math.PI / 2

export default function Earth({ marker }) {
  const [isZoom, setIsZoom] = useState(false)

  const { lat, lon } = marker

  const latRot = (lat * Math.PI / 180)
  const lonRot = -(lon * Math.PI / 180) + LON_OFFSET

  const { nodes, materials } = useGLTF('/earth.gltf')

  const { scale, markerPosition, rotation } = useSpring({
    scale: isZoom ? 4 : 2,
    markerPosition: isZoom ? [0, 0, 4.5] : [0, 0, 2.5],
    rotation: [latRot, lonRot, 0]
  })

  return (
    <>
      <a.group
        scale={scale}
        dispose={null}
        rotation={rotation}
        onClick={() => {
          setIsZoom(prev => !prev)
        }}
      >
        <group scale={1.13}>
          <mesh geometry={nodes.Object_4.geometry} material={materials['Scene_-_Root']} />
        </group>
      </a.group>
      {marker.type === 'plane' ? (
        <Plane id={marker.id} position={markerPosition} rotation={marker.rotation} />
      ) : (
        <a.mesh position={markerPosition}>
          <sphereGeometry args={[0.01]} />
          <meshStandardMaterial color={'orange'} />
        </a.mesh>
      )}
    </>
  )
}

useGLTF.preload('/earth.gltf')
